# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-10-08 04:26
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('major', '0001_initial'),
        ('college', '0001_initial'),
        ('dept', '0001_initial'),
        ('level', '0001_initial'),
        ('modeofentry', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('1', 'Admin'), ('2', 'Academic Affairs'), ('3', 'Bursar'), ('4', 'Student Affairs'), ('5', 'College Officer'), ('6', 'Lecturer'), ('7', 'Student'), ('8', 'Dean'), ('9', 'Non-Academic Staff'), ('10', 'Voter')], default='', max_length=2)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('date_birth', models.DateField(default='1970-01-01', null=True)),
                ('nationality', models.CharField(blank=True, max_length=20, null=True)),
                ('state_origin', models.CharField(blank=True, max_length=20, null=True)),
                ('lga', models.CharField(blank=True, max_length=20, null=True)),
                ('religion', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('next_kin', models.TextField(blank=True, null=True)),
                ('next_kin_address', models.TextField(blank=True, null=True)),
                ('town', models.TextField(blank=True, null=True)),
                ('genotype', models.CharField(blank=True, choices=[('AA', 'AA'), ('AS', 'AS'), ('SS', 'SS'), ('CS', 'CS'), ('AC', 'AC')], max_length=5, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('O+', 'O+'), ('O-', 'O-'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=5, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to=b'')),
                ('profile_rank', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=b'')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicAffairs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bursar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CollegeOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.College')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dean',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college.College')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(blank=True, choices=[('Professor', 'Professor'), ('Associate Professor', 'Associate Professor'), ('Senior Lecturer', 'Senior Lecturer'), ('Lecturer I', 'Lecturer I'), ('Lecturer II', 'Lecturer II'), ('Assistant Lecturer', 'Assistant Lecturer'), ('Graduate Assistant', 'Graduate Assistant')], max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('Permanent', 'Permanent'), ('Adjunct', 'Adjunct'), ('Contract', 'Contract')], max_length=20, null=True)),
                ('dept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dept.Dept')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_no', models.CharField(blank=True, max_length=15, null=True)),
                ('parent_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('olevel', models.CharField(blank=True, choices=[('WAEC', 'WAEC'), ('NECO', 'NECO'), ('WAEC/GCE', 'WAEC/GCE'), ('NECO/GCE', 'NECO/GCE'), ('WAEC/NECO', 'WAEC/NECO'), ('NABTEB', 'NABTEB'), ('NABTEB/WAEC', 'NABTEB/WAEC'), ('NABTEB/NECO', 'NABTEB/NECO'), ('NABTEB/GCE', 'NABTEB/GCE')], max_length=15, null=True)),
                ('status', models.CharField(blank=True, choices=[('1', 'Normal'), ('2', 'Exchange'), ('3', 'Leave'), ('4', 'Sick'), ('5', 'Suspension'), ('6', 'Deferment'), ('7', 'Withdrawn'), ('8', 'Graduated')], default='1', max_length=15)),
                ('edit', models.BooleanField(default=False)),
                ('programme_type', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time'), ('Executive', 'Executive')], default='Full Time', max_length=15)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='level.Level')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='major.Major')),
                ('mode_of_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modeofentry.ModeOfEntry')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAffairs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(choices=[('1', 'Head'), ('2', 'Officer')], default=2, max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rank', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Unit'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
